# Enhanced Railway Configuration
spring:
  application:
    name: property-service
  
  # Spring Boot Admin Client Configuration
  boot:
    admin:
      client:
        url: ${ADMIN_SERVER_URL:http://localhost:8090}
        username: ${ADMIN_USERNAME:admin}
        password: ${ADMIN_PASSWORD:admin123}
        instance:
          service-url: ${SERVICE_URL:http://localhost:8081}
          management-url: ${SERVICE_URL:http://localhost:8081}/actuator
          health-url: ${SERVICE_URL:http://localhost:8081}/actuator/health
          metadata:
            tags:
              environment: ${SPRING_PROFILES_ACTIVE:development}
              version: 1.0.0
              team: backend
  
  datasource:
    url: jdbc:postgresql://${PGHOST:localhost}:${PGPORT:5432}/${PGDATABASE:railway}
    username: ${PGUSER:postgres}
    password: ${PGPASSWORD:1234}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 3
      minimum-idle: 1
      connection-timeout: 30000
      idle-timeout: 300000
      max-lifetime: 900000
      connection-test-query: SELECT 1
      validation-timeout: 5000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          time_zone: UTC
        connection:
          handling_mode: delayed_acquisition_and_release_after_transaction
        temp:
          use_jdbc_metadata_defaults: false
  
  # Cache configuration
  cache:
    type: simple
  
  # Railway-specific web configuration
  web:
    cors:
      allowed-origins: "*"
      allowed-methods: "*"
      allowed-headers: "*"
      max-age: 3600
  
  # Exclude optional integrations we don't have
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

server:
  port: ${PORT:8081}
  tomcat:
    max-threads: 20
    min-spare-threads: 2
    accept-count: 50
    connection-timeout: 20000
  address: 0.0.0.0
  compression:
    enabled: true
  http2:
    enabled: true
  forward-headers-strategy: native

management:
  endpoints:
    web:
      exposure:
        include: "*"
      cors:
        allowed-origins: "*"
        allowed-methods: "*"
        allowed-headers: "*"
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    tags:
      application: ${spring.application.name}
      environment: ${SPRING_PROFILES_ACTIVE:development}

logging:
  level:
    root: INFO
    com.stayhub: INFO
    org.springframework.boot: INFO
    org.springframework.web.cors: DEBUG
    com.zaxxer.hikari: WARN
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"