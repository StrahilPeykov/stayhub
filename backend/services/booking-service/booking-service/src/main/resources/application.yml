# Booking Service Configuration for Railway
spring:
  application:
    name: booking-service
  
  datasource:
    url: jdbc:postgresql://${PGHOST:localhost}:${PGPORT:5432}/${PGDATABASE:railway}
    username: ${PGUSER:postgres}
    password: ${PGPASSWORD:1234}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 5
      minimum-idle: 2
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-test-query: SELECT 1
      validation-timeout: 5000
  
  jpa:
    hibernate:
      ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          time_zone: UTC
        connection:
          handling_mode: delayed_acquisition_and_release_after_transaction
  
  # Cache configuration
  cache:
    type: simple
  
  # Exclude optional integrations we don't have
  autoconfigure:
    exclude:
      - org.springframework.boot.autoconfigure.kafka.KafkaAutoConfiguration
      - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

# External service URLs
services:
  property:
    url: ${PROPERTY_SERVICE_URL:http://localhost:8081}

server:
  port: ${PORT:8082}
  tomcat:
    max-threads: 20
    min-spare-threads: 2

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    root: INFO
    com.stayhub: DEBUG
    org.springframework.boot: INFO
    com.zaxxer.hikari: INFO
    org.hibernate.SQL: INFO
  pattern:
    console: "%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"